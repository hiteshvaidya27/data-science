# Step 1
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
 
# Step 2 - Load the dataset
df_train = pd.read_csv('C:/Users/Balabhau/Desktop/Python/SalaryData_Train.csv')
df_traina = df_train.drop(['Unnamed: 0'], axis=1)
# Step 3
print(df_traina.head())
 
# Step 4 - Visualisation
 
plt.scatter(df_traina['YearsExperience'],df_traina['Salary'])
plt.xlabel('Years of Experience')
plt.ylabel('Salary in ???')
plt.title('Salary V/S Years of Experience')
plt.show()
 
# Step 5 - Feature Extraction
 
feature = df_traina.iloc[:,:-1].values
labels = df_traina.iloc[:,1].values
 
print('Shape of Feature:',feature.shape)
print('Shape of Labels:', labels.shape)
 
# Step 6 - Sample 
 
from sklearn.model_selection import train_test_split
 
X_train, X_test, y_train, y_test = train_test_split(feature,labels,test_size = 0.3,random_state=0)
 
# Step 7 - Create the Linear Regression Model
 
from sklearn.linear_model import LinearRegression
 
reg = LinearRegression()
 
# step 8 - fit the regression (reg) model that we have prepared with train and
# test dataset in the sampling step
 
reg.fit(X_train,y_train)
 
plt.scatter(X_train,y_train,color='r')
plt.plot(X_train,reg.predict(X_train),color='b')
plt.show()
 
'''
y = mx + c 
m = slope
c = y-intercept
'''
 
# Slope
print(reg.coef_)
 
 
# intercept
print(reg.intercept_)
 
 
'''
y = m*x + c
'''
y = 9360.26128619*7.9 + 26777.391341197632
print(y)
 
 
y_pred = reg.predict(X_train)
 
y_predtest = reg.predict(X_test)
 
#-------------------#
 
df_test = pd.read_csv('C:/Users/Balabhau/Desktop/Python/SalaryData_Testa.csv')
#df_testa = df_test.drop(['Unnamed: 0'], axis=1)
 
feature_test = df_test.iloc[:,0].values
 
#sy_pred_featuretest = reg.predict(feature_test)
 
feature_test = feature_test.reshape(-1,1)
 
y_pred_featuretest = reg.predict(feature_test)
 
 
# Accuracy
print('Train Accuracy :', reg.score(X_train,y_train))
print('Test Accuracy :', reg.score(X_test,y_test))
